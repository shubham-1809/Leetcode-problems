class Solution {
    int reverse(int num){
        int rev = 0;

        while(num > 0){
            int rem = num % 10;
            rev = rev * 10 + rem;
            num /= 10;
        }
        return rev;
    }
public:
    int countNicePairs(vector<int>& nums) {
        int size = nums.size(), cntPairs = 0, mod = 1e9 + 7;
        unordered_map<int, int> hashMap;

        for(int ind = 0; ind < size; ind++) nums[ind] = nums[ind] - reverse(nums[ind]);
        for(int ind = 0; ind < size; ind++){
            cntPairs = (cntPairs + hashMap[nums[ind]]) % mod;
            hashMap[nums[ind]]++;
        }
        return cntPairs;
    }
};