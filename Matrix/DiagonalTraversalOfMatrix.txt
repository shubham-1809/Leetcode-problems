class Solution {
    vector<int> usingBFS(vector<vector<int>>& nums){
        int row_size = nums.size();
        queue<pair<int, int>> q;
        q.push({0, 0});
        vector<int> result;

        while(!q.empty()){
            int row = q.front().first;
            int col = q.front().second;
            q.pop();
            result.push_back(nums[row][col]);

            if(col == 0 && row + 1 < row_size) q.push({row + 1, col});
            if(col + 1 < nums[row].size()) q.push({row, col + 1});
        }
        return result;
    }
public:
    vector<int> findDiagonalOrder(vector<vector<int>>& nums) {
        return usingBFS(nums);
        // can also be solved using maps but this above solution is just very good use case of BFS algorithm
    }
};