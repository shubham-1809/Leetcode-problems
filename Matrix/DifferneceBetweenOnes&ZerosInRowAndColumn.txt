class Solution {
public:
    vector<vector<int>> onesMinusZeros(vector<vector<int>>& grid) {
        int n = grid.size(), m = grid[0].size();
        vector<vector<int>> diff(n, vector<int>(m, 0));
        vector<int> row(n, 0), col(m, 0);

        for(int i = 0; i < n; i++){
            for(int j = 0; j < m; j++){
                if(grid[i][j] == 1){
                    row[i] += 1;
                    col[j] += 1;
                }
            }
        }

        int onesRowi, onesColj, zerosRowi, zerosColj;
        for(int i = 0; i < n; i++){
            for(int j = 0; j < m; j++){
                onesRowi = row[i];
                onesColj = col[j];
                zerosRowi = n - onesRowi;
                zerosColj = m - onesColj;
                diff[i][j] = onesRowi + onesColj - zerosRowi - zerosColj;
            }
        }
        return diff;
    }
};