void merge(vector<int> &arr, int l, int mid, int r){
    int left = l, right = mid + 1;
    vector<int> temp;

    while(left <= mid && right <= r){
        if(arr[left] <= arr[right]) temp.push_back(arr[left++]);
        else temp.push_back(arr[right++]);
    }
    while(left <= mid) temp.push_back(arr[left++]);
    while(right <= r) temp.push_back(arr[right++]);

    for(int ind = l; ind <= r; ind++) arr[ind] = temp[ind - l];
}

void mergeSort(vector<int>& arr, int l, int r) {
    // Write Your Code Here
    if(l >= r) return;

    int mid = (l + r) / 2;
    mergeSort(arr, l, mid);
    mergeSort(arr, mid + 1, r);
    merge(arr, l, mid, r);
}